# セッション用のconfig

# 設定必須項目

# セッションID用の暗号フォーマット & 鍵
# default rijndael: keyのdefaultはなし(当然)
session_crypt_config = ./session_crypt.conf


# 制限値関連
# パスワードのエラー許容回数
# default 5
pass_error_count = 5

# パスワードエラーでの一時ロック時間：単位は秒
# default 3600(sec) = 1h
pass_error_lock_time = 3600

# セッションの寿命：単位は秒
# default 600(sec) = 5min
session_expire = 600

# セッションの寿命が迫ったときの対応方法
# 0:なにもしない（激しく非推奨
# 1:新しいセッションを作成する。古いセッションも寿命までは有効
# 2:新しいセッションを作成する。古いセッションは破棄する
# 3:寿命そのものを伸ばす(非推奨
# default 1
session_expire_flg = 1

# session_module_loginにまつわる設定
# ここだけ設定して、session_module_loginをincludeしたら大体事足りるように
# login_id_form_name = ログインのときにIDが入ってるformの名前
# login_pass_form_name = ログインのときにpasswordが入ってるformの名前
# login_error_return_command = ログインにしくった時の移動用コマンド名
# login_return_command = ログインに成功した時の移動用コマンド名
login_id_form_name = id
login_pass_form_name = pass
login_error_return_command = index
login_return_command = top

# session_model_authにまつわる設定
# とはいえ一部はsession_module_loginでも使うんだけどね
# auth_key_cookie = Cookieを使ってkey埋め込むならon  default on
# auth_key_cookie_name = Cookieにkey埋め込むときのname default s
# auth_key_post = postを使ってkey埋め込むならon  default off
# auth_key_post_name = postにkey埋め込むときのname default s
# auth_key_get = GETは基本offだよねぇ？
# auth_error_return_command = 認証NGのときに遷移するコマンド名
auth_key_cookie = on
auth_key_cookie_name = s
auth_key_post = off
auth_key_post_name = s
auth_key_get = off
auth_error_return_command = index

# ----------------------------------------------------------
#/* -- ここから下ってDB設定に書いてあったほうがいいんだ…
#   将来でいいから対応しよう -- */


# ログインのときのDBのほうの場所
# とりあえずテーブル構成は「きめうち」する。session_auth_clump.inc読んで。
# ここ自由にしてもしゃぁないっしょ。
#SELECT auth_user.id FROM auth_user WHERE auth_user.id = 'cgi(id)' and auth_user.pass = 'encrypt(cgi(pass))';
# auth_clump = authテーブルのclumpクラスファイル名 : クラス名
# auth_clump_table_name = authテーブルの名前。default auth_user
# session_clump_table_name = sessionIDを格納するテーブルの名前。default auth_session
auth_type = 0
auth_clump = session_auth_clump.inc:session_auth_clump
auth_clump_table_name = auth_user
session_clump_table_name = auth_session
keyの格納場所
keyのname



# いつもの「認証テーブルにはID入ってるけど入力はメアドで」なんて時用
#SELECT user_info.email FROM user_info, auth_user WHERE user_info.id = auth_user.id and user_info.email = 'cgi(id)' and auth_user.pass = 'encrypt(cgi(pass))';
# auth_clump = authテーブルのclumpクラスファイル名 : クラス名
# user_clump = userテーブルの以下略
# foreign_key_auth = authテーブル側の外部キーのタプル名(カラム名)
# foreign_key_user = userテーブル側の外部キーのタプル名(カラム名)
# id_tuple_name = userテーブルに存在する、IDとして比較すべきタプル名
#auth_type = 1
#auth_clump = session_auth_clump.inc:session_auth_clump
#user_clump = session_user_clump.inc:user
#foreign_key_auth = id
#foreign_key_user = id
#id_tuple_name = email

# 上述のdefault値ここにまとめるよ〜
# default auth_type = 0
# default auth_clump = session_auth_clump.inc:session_auth_clump
# default user_clump = session_user_clump.inc:user
# default foreign_key_auth = id
# default foreign_key_user = id
# default id_tuple_name = email


# パスワードの暗号種別
# sha-1, md5, 3des, rijndael(256), none
# XXX 厳密には二重設定な点に注意!!
#password_crypt_type = sha-1 | md5 | 3des | rijndael | none
# default sha-1(…でいいかなぁ？) key ハッシュなのもあってdefaultはなし
password_crypt_type = sha-1
#password_crypt_key = hogeramugera

